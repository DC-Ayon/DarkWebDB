name: Deploy Darkweb App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Deploy via SSH and git
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            # Install Node.js and npm if missing
            if ! command -v node &> /dev/null; then
                curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.0/install.sh | bash
                export NVM_DIR="$HOME/.nvm"
                [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
                [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
                nvm install 20
                node -v
                npm -v
            fi
            export PATH="$HOME/.nvm/versions/node/$(nvm version 20)/bin:$PATH"

            # Clone or update repo
            if [ ! -d "/home/${{ secrets.SERVER_USER }}/DarkWebDB/.git" ]; then
              git clone git@github.com:DC-Ayon/DarkWebDB.git /home/${{ secrets.SERVER_USER }}/DarkWebDB
            else
              cd /home/${{ secrets.SERVER_USER }}/DarkWebDB
              git fetch --all
              git reset --hard origin/main
            fi
            cd /home/${{ secrets.SERVER_USER }}/DarkWebDB

            # Backend setup
            cd backend
            npm install pm2 -g
            npm ci
            pm2 describe darkweb-backend > /dev/null
            if [ $? -eq 0 ]; then
              pm2 restart darkweb-backend
            else
              pm2 start server.js --name "darkweb-backend" --watch --env production
            fi
            pm2 save
            pm2 startup

            # Frontend setup
            cd ../frontend/my-next-app
            npm install
            npm run build
            pm2 describe darkweb-frontend > /dev/null
            if [ $? -eq 0 ]; then
              pm2 restart darkweb-frontend
            else
              pm2 start npm --name "darkweb-frontend" -- run start -- --port 4000
            fi
            pm2 save
            pm2 startup
            pm2 save